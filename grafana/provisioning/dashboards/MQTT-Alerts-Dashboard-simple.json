{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 10,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ae6udrwqg7ojka"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "_time"
          }
        ]
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "language": "flux",
          "query": "// Table of recent alerts\nfrom(bucket: \"mqtt\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r._field == \"message\")\n  // optional: if you want only topics that begin with \"alerts/\"\n  |> filter(fn: (r) => r.topic =~ /^alerts\\//)\n  // pivot so severity, device, message, and timestamp can be shown in one row\n  |> pivot(\n    rowKey: [\"_time\"],\n    columnKey: [\"_field\"],\n    valueColumn: \"_value\"\n  )\n  |> keep(columns: [\"_time\", \"device\", \"severity\", \"message\"])\n  // rename _time to time for clarity\n  |> rename(columns: { _time: \"time\" })",
          "refId": "A"
        }
      ],
      "title": "Alerts Table",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ae6udrwqg7ojka"
      },
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "options": {
        "displayMode": "gradient",
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "maxVizHeight": 300,
        "minVizHeight": 16,
        "minVizWidth": 8,
        "namePlacement": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": false,
        "sizing": "auto",
        "tooltip": {
          "mode": "single"
        },
        "valueMode": "color"
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "language": "flux",
          "query": "// Count alerts grouped by severity\nfrom(bucket: \"mqtt\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"mqtt_consumer\")\n  |> filter(fn: (r) => r._field == \"message\")\n  // optional: again, only topics that begin with \"alerts/\"\n  |> filter(fn: (r) => r.topic =~ /^alerts\\//)\n  |> group(columns: [\"severity\"])\n  |> count(column: \"_value\")\n  // rename count to alert_count and keep severity for grouping\n  |> rename(columns: { _value: \"alert_count\" })\n  // convert back to wide for a bar gauge grouped by severity\n  |> group()",
          "refId": "A"
        }
      ],
      "title": "Alerts by Severity (Count)",
      "type": "bargauge"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "MQTT Alerts Dashboard",
  "uid": "bec7lsu6e1zi8c",
  "version": 1,
  "weekStart": ""
}